name: 'Run OpenMCx'
description: 'An action script that will perform simulations using the 
              open-source Co-Simulation Middleware eclipse OpenMCx'
inputs:
  ssd: 
    description: 'Path to the System Structure Definition (SSD) file that define
                  the simulation that shall be executed. For running more than
                  one single simulation, separate the paths for each SSD file
                  using a white space.
                  Examples: 
                  Single file: "./path/to/system.ssd"
                  Multiple files: "./path/to/system1.ssd ./path/to/system2.ssd"'
    required: true
  resultDir:
    description: 'Path to the directory where the simulation results shall be 
                  stored. If resultDir is set to "./sim-res", and ssd is set 
                  to "./path/to/my_system1.ssd ./path/to/system_2.ssd" the
                  results are stored as follows:
                  ./sim-res/my_system1/<FMU_Name>_in.csv
                  ./sim-res/my_system1/<FMU_Name>_res.csv
                  ./sim-res/system_2/<FMU_Name>_in.csv
                  ./sim-res/system_2<FMU_Name>_res.csv
                  where <FMU_Name>_in represents the inputs fed to the respective
                  FMU in the system and <FMU_Name>res represents the outputs of 
                  the respective FMU in the system.'
    required: false
    default: ./simulation-results
runs:
  using: "composite"
  steps:
    - name: Install openmcx prerequisites
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y cmake git
        sudo apt install -y build-essential
        sudo apt install -y python-is-python3
        sudo apt install -y libxml2-dev zlib1g-dev
    - name: Checkout openmcx
      uses: actions/checkout@v4
      with: 
        repository: eclipse/openmcx
        ref: 6e5e7bfc14bc4fe00fb2eeb392013f3942d3b0d4
        path: 'openmcx'
    - name: build openmcx
      working-directory: openmcx
      shell: bash
      run: ./build.sh
    - name: run simulation
      shell: bash
      run: |
        ssdFiles=(${{ inputs.ssd }})
        outputDirectory=${{ inputs.resultDir }}
        if [[ ${outputDirectory: -1} = / ]]; then outputDirectory=${outputDirectory: 0:-1}; fi
        for ssdPath in ${ssdFiles[@]}; do ssdPathSplitted=(${ssdPath//// }); systemName=${ssdPathSplitted[-1]: 0: -4};./openmcx/install/openmcx $ssdPath -v -r $outputDirectory/$systemName; done
